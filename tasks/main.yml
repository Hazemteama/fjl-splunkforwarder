---
# tasks file for ansible-splunk-forwarder
- name: Add Operating System specific variables
  include_vars: "{{ ansible_system }}_{{ ansible_pkg_mgr }}.yml"

- name: Check if splunk is already installed
  script: "{{ ansible_system }}_{{ ansible_pkg_mgr }}.sh"
  args:
    executable: /bin/bash
  register: splunk_installed
  failed_when: false
  changed_when: false
- debug:
    msg="{{ splunk_installed }}"

- name: Check if splunk is running
  shell: ps -ef | grep -i splunk |grep -v grep  | awk '{print $8}' | head -1
  register: running
- debug: var=running.stdout

- name: stop splunk if installed
  service:
    name: splunk
    state: stopped
  when: running.stdout == 'splunkd'

- name: stop splunk when service name is SplunkForwarder
  service:
    name: SplunkForwarder
    state: stopped
  when: running.stdout == 'splunkd'

- name: Configure splunk group
  group:
    name: "{{ splunk_nix_group }}"
    state: present

- name: Configure splunk user
  user:
    name: "{{ splunk_nix_user }}"
    state: present
    createhome: no
    expires: no
    group: "{{ splunk_nix_group }}"
    home: /opt/splunkforwarder

- name: Configure splunk forwarder directory
  file:
    path: /opt/splunkforwarder
    owner: "{{ splunk_nix_user }}"
    group: "{{ splunk_nix_group }}"
    state: directory
    recurse: yes

- name: Copy splunkforwarder package to host
  copy:
    src: "splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
    dest: "/var/tmp/splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
  when:
  - splunk_installed.rc|int == 1 or splunk_installed.rc|int == 100 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )

- name: Create solaris response file
  file:
    path: /var/tmp/splunkresponsefile
    state: touch
  when:
  - ansible_pkg_mgr == 'svr4pkg'
  - splunk_installed.rc|int == 1 or splunk_installed.rc|int == 100 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )

- name: Install splunk forwarder - rpm based Operating Systems
  command: "rpm -Uvh /var/tmp/splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
  when:
  - ansible_pkg_mgr == 'yum' or ansible_pkg_mgr == 'zypper'
  - splunk_installed.rc|int == 1 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )
  args:
    warn: no

- name: Install splunk forwarder - apt based Operating Systems
  apt:
    deb: "/var/tmp/splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
  when:
  - ansible_pkg_mgr == 'apt'
  - splunk_installed.rc|int == 1 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )

- debug:
    msg="{{ splunk_installed.rc }}"

- name: Install splunk forwarder - svr4pkg based Operating Systems
  svr4pkg:
    name: splunkforwarder
    src: "/var/tmp/splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
    state: "{{ item }}"
    response_file: /var/tmp/splunkresponsefile
    zone: current
  when:
  - ansible_pkg_mgr == 'svr4pkg'
  - splunk_installed.rc|int == 1 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )
  notify: restart splunk
  with_items:
  - absent
  - present

- name: Create Admin password file
  copy:
    dest: "/opt/splunkforwarder/etc/passwd"
    content: ":admin:$6$pZLz648Kwjo5mQzh$xw.OXvBm0taTtGQTdBgTrEXDnP5Wj71u/muupe1DQa3XENlpp/.q21egtgbdXLDySkI8KsYMyLMdFhgwsmw0D1::Administrator:admin:changeme@example.com:::18164"
    owner: splunk
    group: splunk
    mode:  600

- name: Configure splunk forwarder directory again
  file:
    path: /opt/splunkforwarder
    owner: "{{ splunk_nix_user }}"
    group: "{{ splunk_nix_group }}"
    state: directory
    recurse: yes

- name: Enable splunk auto-start at boot
  shell: "/opt/splunkforwarder/bin/splunk enable boot-start -user {{ splunk_nix_user }} --accept-license --answer-yes"
  
- debug:
    msg="{{ splunk_installed.rc|int }}"   

- name: Configure Deployment Server
  template:
    src: deploymentclient.conf.j2
    dest: /opt/splunkforwarder/etc/system/local/deploymentclient.conf
    owner: "{{ splunk_nix_user }}"
    group: "{{ splunk_nix_group }}"
    mode: 0600

- name: reset failed splunkforwarder service
  shell: 'systemctl reset-failed SplunkForwarder.service'

- name: restart splunk
  service:
    name: SplunkForwarder.service
    state: restarted 
    enabled: yes 

- name: Cleanup response file
  file:
    path: /var/tmp/splunkresponsefile
    state: absent
  when:
  - ansible_pkg_mgr == 'svr4pkg'
  - splunk_installed.rc|int == 1 or splunk_installed.rc|int == 100 or ( splunk_installed.rc|int == 0 and ( splunkforwarder_version.0|int > splunk_installed.stdout_lines.0|int or splunkforwarder_version.1|int > splunk_installed.stdout_lines.1|int or splunkforwarder_version.2|int > splunk_installed.stdout_lines.2|int ) )

- name: Cleanup
  file:
    path: "/var/tmp/splunkforwarder-{{ splunkforwarder_version|join('.') }}-{{ ansible_architecture }}.{{ splunkforwarder_package_type }}"
    state: absent
